(set-info :smt-lib-version 2.6)
(set-logic QF_FXP)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unsat)
;; MathSAT API call trace ;; generated on 05/20/15 17:24:57 
(declare-fun x0 () (_ SFXP 32 16))
(declare-fun x1 () (_ SFXP 32 16))
(declare-fun x2 () (_ SFXP 32 16))
(declare-fun x3 () (_ SFXP 32 16))
(declare-fun x4 () (_ SFXP 32 16))
(declare-fun x5 () (_ SFXP 32 16))
(declare-fun x6 () (_ SFXP 32 16))
(define-fun _t_10 () (_ SFXP 32 16) (sfxp #x000a0000 16))
(define-fun _t_12 () (_ SFXP 32 16) (sfxp #x000a0000 16))
(define-fun _t_13 () (_ SFXP 32 16) x0)
(define-fun _t_14 () Bool (sfxp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (sfxp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ SFXP 32 16) x1)
(define-fun _t_18 () Bool (sfxp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (sfxp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ SFXP 32 16) x2)
(define-fun _t_22 () Bool (sfxp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (sfxp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ SFXP 32 16) x3)
(define-fun _t_26 () Bool (sfxp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (sfxp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ SFXP 32 16) x4)
(define-fun _t_30 () Bool (sfxp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (sfxp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_33 () (_ SFXP 32 16) x5)
(define-fun _t_34 () Bool (sfxp.leq _t_12 _t_33))
(define-fun _t_35 () Bool (sfxp.leq _t_33 _t_10))
(define-fun _t_36 () Bool (and _t_34 _t_35))
(assert _t_36)
(define-fun _t_37 () (_ SFXP 32 16) x6)
(define-fun _t_38 () Bool (sfxp.leq _t_12 _t_37))
(define-fun _t_39 () Bool (sfxp.leq _t_37 _t_10))
(define-fun _t_40 () Bool (and _t_38 _t_39))
(assert _t_40)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_42 () (_ SFXP 32 16) (sfxp #x00000000 16))
(define-fun _t_44 () (_ SFXP 32 16) (sfxp #x00003374 16))
(define-fun _t_46 () (_ SFXP 32 16) (sfxp #x0000d999 16))
(define-fun _t_47 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_46))
(define-fun _t_48 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_47))
(define-fun _t_51 () (_ SFXP 32 16) (sfxp #x000070a3 16))
(define-fun _t_52 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_51))
(define-fun _t_53 () (_ SFXP 32 16) (sfxp.add Saturated _t_48 _t_52))
(define-fun _t_56 () (_ SFXP 32 16) (sfxp #x000080c4 16))
(define-fun _t_57 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_56))
(define-fun _t_58 () (_ SFXP 32 16) (sfxp.add Saturated _t_53 _t_57))
(define-fun _t_61 () (_ SFXP 32 16) (sfxp #x000019db 16))
(define-fun _t_62 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_61))
(define-fun _t_63 () (_ SFXP 32 16) (sfxp.add Saturated _t_58 _t_62))
(define-fun _t_66 () (_ SFXP 32 16) (sfxp #x00009ef9 16))
(define-fun _t_67 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_66))
(define-fun _t_68 () (_ SFXP 32 16) (sfxp.add Saturated _t_63 _t_67))
(define-fun _t_71 () (_ SFXP 32 16) (sfxp #x00000d91 16))
(define-fun _t_72 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_71))
(define-fun _t_73 () (_ SFXP 32 16) (sfxp.add Saturated _t_68 _t_72))
(define-fun _t_75 () (_ SFXP 32 16) (sfxp #x00004b02 16))
(define-fun _t_76 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_75))
(define-fun _t_77 () (_ SFXP 32 16) (sfxp.add Saturated _t_73 _t_76))
(define-fun _t_78 () Bool (sfxp.leq _t_77 _t_44))
(assert _t_78)
(define-fun _t_80 () (_ SFXP 32 16) (sfxp #x00000937 16))
(define-fun _t_82 () (_ SFXP 32 16) (sfxp #x0000e0c4 16))
(define-fun _t_83 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_82))
(define-fun _t_84 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_83))
(define-fun _t_87 () (_ SFXP 32 16) (sfxp #x00002f1a 16))
(define-fun _t_88 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_87))
(define-fun _t_89 () (_ SFXP 32 16) (sfxp.add Saturated _t_84 _t_88))
(define-fun _t_91 () (_ SFXP 32 16) (sfxp #x0000afdf 16))
(define-fun _t_92 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_91))
(define-fun _t_93 () (_ SFXP 32 16) (sfxp.add Saturated _t_89 _t_92))
(define-fun _t_96 () (_ SFXP 32 16) (sfxp #x0000deb8 16))
(define-fun _t_97 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_96))
(define-fun _t_98 () (_ SFXP 32 16) (sfxp.add Saturated _t_93 _t_97))
(define-fun _t_101 () (_ SFXP 32 16) (sfxp #x0000bbe7 16))
(define-fun _t_102 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_101))
(define-fun _t_103 () (_ SFXP 32 16) (sfxp.add Saturated _t_98 _t_102))
(define-fun _t_106 () (_ SFXP 32 16) (sfxp #x00007851 16))
(define-fun _t_107 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_106))
(define-fun _t_108 () (_ SFXP 32 16) (sfxp.add Saturated _t_103 _t_107))
(define-fun _t_110 () (_ SFXP 32 16) (sfxp #x00004083 16))
(define-fun _t_111 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_110))
(define-fun _t_112 () (_ SFXP 32 16) (sfxp.add Saturated _t_108 _t_111))
(define-fun _t_113 () Bool (sfxp.leq _t_80 _t_112))
(assert _t_113)
(define-fun _t_115 () (_ SFXP 32 16) (sfxp #x0000fc6a 16))
(define-fun _t_117 () (_ SFXP 32 16) (sfxp #x0000a418 16))
(define-fun _t_118 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_117))
(define-fun _t_119 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_118))
(define-fun _t_122 () (_ SFXP 32 16) (sfxp #x0000ac49 16))
(define-fun _t_123 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_122))
(define-fun _t_124 () (_ SFXP 32 16) (sfxp.add Saturated _t_119 _t_123))
(define-fun _t_127 () (_ SFXP 32 16) (sfxp #x000032b0 16))
(define-fun _t_128 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_127))
(define-fun _t_129 () (_ SFXP 32 16) (sfxp.add Saturated _t_124 _t_128))
(define-fun _t_131 () (_ SFXP 32 16) (sfxp #x000042d0 16))
(define-fun _t_132 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_131))
(define-fun _t_133 () (_ SFXP 32 16) (sfxp.add Saturated _t_129 _t_132))
(define-fun _t_135 () (_ SFXP 32 16) (sfxp #x0000cbc6 16))
(define-fun _t_136 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_135))
(define-fun _t_137 () (_ SFXP 32 16) (sfxp.add Saturated _t_133 _t_136))
(define-fun _t_139 () (_ SFXP 32 16) (sfxp #x0000dced 16))
(define-fun _t_140 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_139))
(define-fun _t_141 () (_ SFXP 32 16) (sfxp.add Saturated _t_137 _t_140))
(define-fun _t_144 () (_ SFXP 32 16) (sfxp #x00002b02 16))
(define-fun _t_145 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_144))
(define-fun _t_146 () (_ SFXP 32 16) (sfxp.add Saturated _t_141 _t_145))
(define-fun _t_147 () Bool (sfxp.leq _t_146 _t_115))
(assert _t_147)
(define-fun _t_149 () (_ SFXP 32 16) (sfxp #x000089ba 16))
(define-fun _t_151 () (_ SFXP 32 16) (sfxp #x0000f6c8 16))
(define-fun _t_152 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_151))
(define-fun _t_153 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_152))
(define-fun _t_156 () (_ SFXP 32 16) (sfxp #x0000b810 16))
(define-fun _t_157 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_156))
(define-fun _t_158 () (_ SFXP 32 16) (sfxp.add Saturated _t_153 _t_157))
(define-fun _t_161 () (_ SFXP 32 16) (sfxp #x0000d22d 16))
(define-fun _t_162 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_161))
(define-fun _t_163 () (_ SFXP 32 16) (sfxp.add Saturated _t_158 _t_162))
(define-fun _t_165 () (_ SFXP 32 16) (sfxp #x00007df3 16))
(define-fun _t_166 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_165))
(define-fun _t_167 () (_ SFXP 32 16) (sfxp.add Saturated _t_163 _t_166))
(define-fun _t_169 () (_ SFXP 32 16) (sfxp #x0000dced 16))
(define-fun _t_170 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_169))
(define-fun _t_171 () (_ SFXP 32 16) (sfxp.add Saturated _t_167 _t_170))
(define-fun _t_173 () (_ SFXP 32 16) (sfxp #x0000f26e 16))
(define-fun _t_174 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_173))
(define-fun _t_175 () (_ SFXP 32 16) (sfxp.add Saturated _t_171 _t_174))
(define-fun _t_178 () (_ SFXP 32 16) (sfxp #x0000bced 16))
(define-fun _t_179 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_178))
(define-fun _t_180 () (_ SFXP 32 16) (sfxp.add Saturated _t_175 _t_179))
(define-fun _t_181 () Bool (sfxp.leq _t_149 _t_180))
(assert _t_181)
(define-fun _t_184 () (_ SFXP 32 16) (sfxp #x0000f74b 16))
(define-fun _t_187 () (_ SFXP 32 16) (sfxp #x000060c4 16))
(define-fun _t_188 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_187))
(define-fun _t_189 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_188))
(define-fun _t_191 () (_ SFXP 32 16) (sfxp #x0000c9fb 16))
(define-fun _t_192 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_191))
(define-fun _t_193 () (_ SFXP 32 16) (sfxp.add Saturated _t_189 _t_192))
(define-fun _t_195 () (_ SFXP 32 16) (sfxp #x00002dd2 16))
(define-fun _t_196 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_195))
(define-fun _t_197 () (_ SFXP 32 16) (sfxp.add Saturated _t_193 _t_196))
(define-fun _t_199 () (_ SFXP 32 16) (sfxp #x000027ae 16))
(define-fun _t_200 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_199))
(define-fun _t_201 () (_ SFXP 32 16) (sfxp.add Saturated _t_197 _t_200))
(define-fun _t_203 () (_ SFXP 32 16) (sfxp #x000049ba 16))
(define-fun _t_204 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_203))
(define-fun _t_205 () (_ SFXP 32 16) (sfxp.add Saturated _t_201 _t_204))
(define-fun _t_207 () (_ SFXP 32 16) (sfxp #x0000f604 16))
(define-fun _t_208 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_207))
(define-fun _t_209 () (_ SFXP 32 16) (sfxp.add Saturated _t_205 _t_208))
(define-fun _t_212 () (_ SFXP 32 16) (sfxp #x0000947a 16))
(define-fun _t_213 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_212))
(define-fun _t_214 () (_ SFXP 32 16) (sfxp.add Saturated _t_209 _t_213))
(define-fun _t_215 () Bool (sfxp.leq _t_214 _t_184))
(assert _t_215)
(define-fun _t_218 () (_ SFXP 32 16) (sfxp #x00005810 16))
(define-fun _t_220 () (_ SFXP 32 16) (sfxp #x0000ec49 16))
(define-fun _t_221 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_220))
(define-fun _t_222 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_221))
(define-fun _t_224 () (_ SFXP 32 16) (sfxp #x00003fbe 16))
(define-fun _t_225 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_224))
(define-fun _t_226 () (_ SFXP 32 16) (sfxp.add Saturated _t_222 _t_225))
(define-fun _t_228 () (_ SFXP 32 16) (sfxp #x0000872b 16))
(define-fun _t_229 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_228))
(define-fun _t_230 () (_ SFXP 32 16) (sfxp.add Saturated _t_226 _t_229))
(define-fun _t_233 () (_ SFXP 32 16) (sfxp #x0000ec8b 16))
(define-fun _t_234 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_233))
(define-fun _t_235 () (_ SFXP 32 16) (sfxp.add Saturated _t_230 _t_234))
(define-fun _t_237 () (_ SFXP 32 16) (sfxp #x0000272b 16))
(define-fun _t_238 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_237))
(define-fun _t_239 () (_ SFXP 32 16) (sfxp.add Saturated _t_235 _t_238))
(define-fun _t_242 () (_ SFXP 32 16) (sfxp #x00006872 16))
(define-fun _t_243 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_242))
(define-fun _t_244 () (_ SFXP 32 16) (sfxp.add Saturated _t_239 _t_243))
(define-fun _t_246 () (_ SFXP 32 16) (sfxp #x0000b78d 16))
(define-fun _t_247 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_246))
(define-fun _t_248 () (_ SFXP 32 16) (sfxp.add Saturated _t_244 _t_247))
(define-fun _t_249 () Bool (sfxp.leq _t_218 _t_248))
(assert _t_249)
(define-fun _t_251 () (_ SFXP 32 16) (sfxp #x0000774b 16))
(define-fun _t_253 () (_ SFXP 32 16) (sfxp #x00008312 16))
(define-fun _t_254 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_13 _t_253))
(define-fun _t_255 () (_ SFXP 32 16) (sfxp.add Saturated _t_42 _t_254))
(define-fun _t_257 () (_ SFXP 32 16) (sfxp #x00001851 16))
(define-fun _t_258 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_17 _t_257))
(define-fun _t_259 () (_ SFXP 32 16) (sfxp.add Saturated _t_255 _t_258))
(define-fun _t_261 () (_ SFXP 32 16) (sfxp #x00006041 16))
(define-fun _t_262 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_21 _t_261))
(define-fun _t_263 () (_ SFXP 32 16) (sfxp.add Saturated _t_259 _t_262))
(define-fun _t_265 () (_ SFXP 32 16) (sfxp #x0000b0e5 16))
(define-fun _t_266 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_25 _t_265))
(define-fun _t_267 () (_ SFXP 32 16) (sfxp.add Saturated _t_263 _t_266))
(define-fun _t_269 () (_ SFXP 32 16) (sfxp #x0000a1ca 16))
(define-fun _t_270 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_29 _t_269))
(define-fun _t_271 () (_ SFXP 32 16) (sfxp.add Saturated _t_267 _t_270))
(define-fun _t_274 () (_ SFXP 32 16) (sfxp #x00008560 16))
(define-fun _t_275 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_33 _t_274))
(define-fun _t_276 () (_ SFXP 32 16) (sfxp.add Saturated _t_271 _t_275))
(define-fun _t_278 () (_ SFXP 32 16) (sfxp #x0000af9d 16))
(define-fun _t_279 () (_ SFXP 32 16) (sfxp.mul Saturated roundTowardPositive _t_37 _t_278))
(define-fun _t_280 () (_ SFXP 32 16) (sfxp.add Saturated _t_276 _t_279))
(define-fun _t_281 () Bool (sfxp.leq _t_251 _t_280))
(assert _t_281)
(check-sat)
(exit)
